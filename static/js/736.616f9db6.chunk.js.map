{"version":3,"file":"static/js/736.616f9db6.chunk.js","mappings":"8MAIMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAU,mCAAG,WAAMC,GAAN,yFACDC,EAAAA,EAAAA,IAAA,UAZR,iCAYQ,OAAwBD,GAAUN,GADjC,cAClBQ,EADkB,OAElBC,EAAOD,EAASC,KAFE,kBAGjBA,GAHiB,2CAAH,qD,8JCXVC,EAAQC,EAAAA,EAAAA,EAAH,kEAKLC,EAAUD,EAAAA,EAAAA,IAAH,2DAIPE,EAAQF,EAAAA,EAAAA,IAAH,4E,SCqClB,EA3Ca,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,gBAAYF,EAAZ,YAeT,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEShB,EAAAA,EAAAA,GAAWc,GAFpB,OAERX,EAFQ,OAGdQ,EAAQR,EAASO,MAHH,gDAKdO,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDASfH,GACD,GAAE,CAACF,KAGF,iCACE,SAACT,EAAD,UAAO,UACP,wBACGK,EAAKU,KAAI,SAAAC,GAAK,OACb,2BACE,SAACd,EAAD,WACE,SAACC,EAAD,CACEc,IAAKD,EAAME,KACXC,IACEH,EAAMI,aAAN,6CAC0CJ,EAAMI,cAC5C,8FAIV,wBAAKJ,EAAME,QACX,4CAAkBF,EAAMK,eAZjBL,EAAMM,GADF,QAmBtB,C","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYTQxOWZiOWI4ODk3ZTE4ZTA0MWIzNjI3NTAyMmYxNSIsInN1YiI6IjY0ZWRmMzQwYzNjODkxMDBjNjg0ODRiZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IZIiDwZpWjrxiyVj8M8DwCEmeVVbICtGjekJrUNHGgw',\n  },\n};\n\nexport const fetchMovie = async params => {\n  const response = await axios.get(`${BASE_URL}${params}`, options);\n  const data = response.data;\n  return data;\n};\n\n","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  margin-left: 20px;\n  font-size: 20px;\n`;\n\nexport const Overlay = styled.div`\n  width: 240px;\n  height: 260px;\n`;\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovie } from 'components/Api/Api';\nimport { Image, Overlay, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const URL = `movie/${movieId}/credits`;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovie(URL);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, [URL]);\n\n  return (\n    <>\n      <Title>Cast</Title>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <Overlay>\n              <Image\n                alt={actor.name}\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                    : 'https://artsmidnorthcoast.com/wp-content/uploads/2014/05/no-image-available-icon-6.png'\n                }\n              />\n            </Overlay>\n            <h3>{actor.name}</h3>\n            <p>{`Character: ${actor.character}`}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["options","method","headers","accept","Authorization","fetchMovie","params","axios","response","data","Title","styled","Overlay","Image","useState","cast","setCast","movieId","useParams","URL","useEffect","fetchData","console","log","message","map","actor","alt","name","src","profile_path","character","id"],"sourceRoot":""}