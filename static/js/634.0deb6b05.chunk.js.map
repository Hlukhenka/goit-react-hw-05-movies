{"version":3,"file":"static/js/634.0deb6b05.chunk.js","mappings":"8MAIMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAU,mCAAG,WAAMC,GAAN,yFACDC,EAAAA,EAAAA,IAAA,UAZR,iCAYQ,OAAwBD,GAAUN,GADjC,cAClBQ,EADkB,OAElBC,EAAOD,EAASC,KAFE,kBAGjBA,GAHiB,2CAAH,qD,sJCVVC,EAAOC,EAAAA,EAAAA,KAAH,yCAIJC,EAAOD,EAAAA,EAAAA,GAAH,6CAIJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6FAMVI,EAAMJ,EAAAA,EAAAA,OAAH,8C,2BCmDhB,MA/DA,WACE,OAA2BK,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAqCC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAkBC,EAAlB,KA+BA,OA7BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQH,EAAUI,IAAI,SAE5B,GAAID,EAAO,CACT,IAAME,EAAS,mCAAG,8GAEOtB,EAAAA,EAAAA,GAAW,sBAAD,OACPoB,EADO,+CAFjB,OAERR,EAFQ,OAKdC,EAASD,EAAOW,SALF,gDAOdC,QAAQC,IAAI,KAAMC,SAPJ,yDAAH,qDAUfJ,GACD,CACF,GAAE,CAACL,KAcF,0BACE,UAACZ,EAAD,CAAMsB,SAbV,SAAsBC,GACpBA,EAAEC,iBACF,IAAMT,EAAQQ,EAAEE,OAAOV,MAAMW,MAEf,KAAVX,GACFF,EAAgB,CAAEE,MAAOA,IAG3BQ,EAAEI,cAAcC,OACjB,EAIG,WACE,kBAAOC,KAAK,QAAQC,aAAa,SACjC,SAACzB,EAAD,CAAK0B,KAAK,SAAV,SAAmB,YACnB,SAAC7B,EAAD,UACIK,EAAOyB,OAELzB,EAAO0B,KAAI,SAAAC,GACT,OACE,+BACE,yBACE,SAAC/B,EAAD,CAEEgC,GAAE,0CAAqCD,EAAME,IAC7CC,MAAO,CAAEC,KAAM7B,GAHjB,SAKGyB,EAAMK,gBAJFL,EAAME,KAFNF,EAAME,KAWpB,IAfD,WAoBb,C","sources":["components/Api/Api.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYTQxOWZiOWI4ODk3ZTE4ZTA0MWIzNjI3NTAyMmYxNSIsInN1YiI6IjY0ZWRmMzQwYzNjODkxMDBjNjg0ODRiZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IZIiDwZpWjrxiyVj8M8DwCEmeVVbICtGjekJrUNHGgw',\n  },\n};\n\nexport const fetchMovie = async params => {\n  const response = await axios.get(`${BASE_URL}${params}`, options);\n  const data = response.data;\n  return data;\n};\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  margin: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-bottom: 10px;\n`;\n\nexport const Btn = styled.button`\n  margin-left: 10px;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { Form, List, StyledLink, Btn } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { fetchMovie } from 'components/Api/Api';\n\nfunction Movies() {\n  const [movies, setMovie] = useState([]);\n  const location = useLocation();\n  const [useParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = useParams.get('query');\n\n    if (query) {\n      const fetchData = async () => {\n        try {\n          const movies = await fetchMovie(\n            `search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n          );\n          setMovie(movies.results);\n        } catch (error) {\n          console.log(error.message);\n        }\n      };\n      fetchData();\n    }\n  }, [useParams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const query = e.target.query.value;\n\n    if (query !== '') {\n      setSearchParams({ query: query });\n    }\n\n    e.currentTarget.reset();\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <input name=\"query\" autoComplete=\"off\" />\n        <Btn type=\"submit\">Search</Btn>\n        <List>\n          {!movies.length\n            ? null\n            : movies.map(movie => {\n                return (\n                  <>\n                    <li key={movie.id}>\n                      <StyledLink\n                        key={movie.id}\n                        to={`/goit-react-hw-05-movies/movies/${movie.id}`}\n                        state={{ from: location }}\n                      >\n                        {movie.original_title}\n                      </StyledLink>\n                    </li>\n                  </>\n                );\n              })}\n        </List>\n      </Form>\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["options","method","headers","accept","Authorization","fetchMovie","params","axios","response","data","Form","styled","List","StyledLink","Link","Btn","useState","movies","setMovie","location","useLocation","useSearchParams","useParams","setSearchParams","useEffect","query","get","fetchData","results","console","log","message","onSubmit","e","preventDefault","target","value","currentTarget","reset","name","autoComplete","type","length","map","movie","to","id","state","from","original_title"],"sourceRoot":""}