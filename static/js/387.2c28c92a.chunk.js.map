{"version":3,"file":"static/js/387.2c28c92a.chunk.js","mappings":"8MAIMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAU,mCAAG,WAAMC,GAAN,yFACDC,EAAAA,EAAAA,IAAA,UAZR,iCAYQ,OAAwBD,GAAUN,GADjC,cAClBQ,EADkB,OAElBC,EAAOD,EAASC,KAFE,kBAGjBA,GAHiB,2CAAH,qD,iJCXVC,E,OAAOC,EAAAA,GAAH,6C,SCoCjB,EAjCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,gBAAYF,EAAZ,YAcT,OAZAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESd,EAAAA,EAAAA,GAAWY,GAFpB,OAERT,EAFQ,OAGdM,EAAWN,EAASY,SAHN,gDAKdC,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDASfJ,GACD,GAAE,CAACF,IACIJ,EAAQW,QAGd,wBACGX,EAAQY,KAAI,SAAAC,GACX,OACE,UAAChB,EAAD,YACE,uBAAIgB,EAAOC,UACX,uBAAID,EAAOE,YAFFF,EAAOG,GAKrB,OAVH,uBAAG,4CAaN,C","sources":["components/Api/Api.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYTQxOWZiOWI4ODk3ZTE4ZTA0MWIzNjI3NTAyMmYxNSIsInN1YiI6IjY0ZWRmMzQwYzNjODkxMDBjNjg0ODRiZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IZIiDwZpWjrxiyVj8M8DwCEmeVVbICtGjekJrUNHGgw',\n  },\n};\n\nexport const fetchMovie = async params => {\n  const response = await axios.get(`${BASE_URL}${params}`, options);\n  const data = response.data;\n  return data;\n};\n\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovie } from 'components/Api/Api';\nimport { Item } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const URL = `movie/${movieId}/reviews`;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovie(URL);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, [URL]);\n  return !reviews.length ? (\n    <p>We don't have any reviews for this movie</p>\n  ) : (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <Item key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["options","method","headers","accept","Authorization","fetchMovie","params","axios","response","data","Item","styled","useState","reviews","setReviews","movieId","useParams","URL","useEffect","fetchData","results","console","log","message","length","map","review","author","content","id"],"sourceRoot":""}